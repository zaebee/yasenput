source main_points
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            = 
    sql_db              = yasenput
    sql_port            = 3306

    sql_query_pre = SET NAMES utf8
    sql_query_post      =
    sql_query           = \
        SELECT pn.id, pn.name, pn.longitude, pn.latitude, pn.description, pn.type_id, pn.address, pn.wifi, pn.wc, pn.invalid, pn.parking, pn.author_id, pn.created, pn.updated, a.first_name, a.last_name, t.id as tags_id, t.level \
        FROM main_points pn, auth_user a, tags_tags t, main_points_tags mpt WHERE pn.author_id = a.id and mpt.points_id = pn.id and t.id = mpt.tags_id
    sql_query_info      = SELECT * FROM `main_points` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = tags_id
    sql_attr_uint       = type_id
    sql_attr_uint       = author_id

    sql_attr_float = longitude
    sql_attr_float = latitude

    # DateField's and DateTimeField's
    sql_attr_timestamp   = created
    sql_attr_timestamp   = updated
}

index main_points
{
    source          = main_points
    path            = /var/data/main_points
    docinfo         = extern
    morphology      = stem_enru, stem_ru, soundex, metaphone, lemmatize_ru_all
    stopwords       = /home/tenoclock/yasenput/YasenPut/stopwords.txt
    wordforms = /home/tenoclock/yasenput/YasenPut/wordforms.txt
    expand_keywords = 1
    index_exact_words = 1
    html_strip = 1
    min_word_len    = 1
    charset_type    = utf-8
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401->U+0435, U+0451->U+0435, U+042D->U+0435, U+0435, U+044D->U+0435
    min_prefix_len  = 0
    min_infix_len   = 1
    enable_star = 1
}


source collections_collections
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            = 
    sql_db              = yasenput
    sql_port            = 3306

    sql_query_pre = SET NAMES utf8
    sql_query_post      =
    sql_query           = \
        SELECT cc.id, cc.author_id, cc.name, cc.description, cc.ypi, cc.created, cc.updated, a.first_name, a.last_name\
        FROM collections_collections cc, auth_user a WHERE cc.author_id = a.id
    sql_query_info      = SELECT * FROM `collections_collections` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = author_id

    # DateField's and DateTimeField's
    sql_attr_timestamp   = created
    sql_attr_timestamp   = updated




}

index collections_collections
{
    source          = collections_collections
    path            = /var/data/collections_collections
    docinfo         = extern
    morphology      = stem_enru, stem_ru, soundex, metaphone, lemmatize_ru_all
    stopwords       = /home/tenoclock/yasenput/YasenPut/stopwords.txt
    wordforms       = /home/tenoclock/yasenput/YasenPut/wordforms.txt
    expand_keywords = 1
    index_exact_words = 1
    html_strip = 1
    min_word_len    = 1
    charset_type    = utf-8
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401->U+0435, U+0451->U+0435, U+042D->U+0435, U+0435, U+044D->U+0435
    min_prefix_len  = 0
    min_infix_len   = 1
    enable_star = 1
}

source tags_tags
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            = 
    sql_db              = yasenput
    sql_port            = 3306

    sql_query_pre = SET NAMES utf8
    sql_query_post      =
    sql_query           = \
        SELECT id, level, name, mapicons, icons, style, onmainmap, author_id, created, updated\
        FROM tags_tags
    sql_query_info      = SELECT * FROM `tags_tags` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = id


    # DateField's and DateTimeField's
    sql_attr_timestamp   = created
    sql_attr_timestamp   = updated




}

index tags_tags
{
    source          = tags_tags
    path            = /var/data/tags_tags
    docinfo         = extern
    morphology      = stem_enru, stem_ru, soundex, metaphone
    stopwords       = /home/tenoclock/yasenput/YasenPut/stopwords.txt
    wordforms = /home/tenoclock/yasenput/YasenPut/wordforms.txt
    expand_keywords = 1
    index_exact_words = 1
    html_strip = 1
    min_word_len    = 1
    charset_type    = utf-8
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401->U+0435, U+0451->U+0435, U+042D->U+0435, U+0435, U+044D->U+0435
    min_prefix_len  = 0
    min_infix_len   = 1
    enable_star = 1
}

source auth_user
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            = 
    sql_db              = yasenput
    sql_port            = 3306

    sql_query_pre = SET NAMES utf8
    sql_query_post      =
    sql_query           = \
        SELECT id, id AS id_attr, username, first_name, last_name\
        FROM auth_user
    sql_query_info      = sql_query_info = SELECT * FROM `auth_user` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = id_attr


    # DateField's and DateTimeField's
    #sql_attr_timestamp   = last_login
    #sql_attr_timestamp   = date_joined




}

index auth_user
{
    source          = auth_user
    path            = /var/data/auth_user
    docinfo         = extern
    morphology      = stem_enru, stem_ru, soundex, metaphone
    stopwords       = /home/tenoclock/yasenput/YasenPut/stopwords.txt
    wordforms = /home/tenoclock/yasenput/YasenPut/wordforms.txt
    expand_keywords = 1
    index_exact_words = 1
    html_strip = 1
    min_word_len    = 1
    charset_type    = utf-8
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401->U+0435, U+0451->U+0435, U+042D->U+0435, U+0435, U+044D->U+0435
    min_prefix_len  = 0
    min_infix_len   = 1
    enable_star = 1
}

source main_routes
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            = 
    sql_db              = yasenput
    sql_port            = 3306

    sql_query_pre = SET NAMES utf8
    sql_query_post      =
    sql_query           = \
        SELECT id, name, description, created, updated, author_id, coords\
        FROM main_routes
    sql_query_info      = SELECT * FROM `main_routes` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = author_id


    # DateField's and DateTimeField's
    sql_attr_timestamp   = created
    sql_attr_timestamp   = updated




}

index main_routes
{
    source          = main_routes
    path            = /var/data/main_routes
    docinfo         = extern
    morphology      = stem_enru, stem_ru, soundex, metaphone
    stopwords       = /home/tenoclock/yasenput/YasenPut/stopwords.txt
    wordforms = /home/tenoclock/yasenput/YasenPut/wordforms.txt
    expand_keywords = 1
    index_exact_words = 1
    html_strip = 1
    min_word_len    = 1
    charset_type    = utf-8
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401->U+0435, U+0451->U+0435, U+042D->U+0435, U+0435, U+044D->U+0435
    min_prefix_len  = 0
    min_infix_len   = 1
    enable_star = 1
}

searchd
{
    # [hostname:]port[:protocol], or /unix/socket/path to listen on
    # known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
    #
    # multi-value, multiple listen points are allowed
    # optional, defaults are 9312:sphinx and 9306:mysql41, as below
    #
    #listen            = 127.0.0.1:3306
    # listen            = 192.168.0.1:9312
    # listen            = 9312
    # listen            = /var/run/searchd.sock
    #listen          = 9312
    #listen          = 3306
    listen          = 3312
    # log file, searchd run info is logged here
    # optional, default is 'searchd.log'
    log         = /var/log/sphinxsearch/searchd.log

    # query log file, all search queries are logged here
    # optional, default is empty (do not log queries)
    query_log       = /var/log/sphinxsearch/query.log

    # client read timeout, seconds
    # optional, default is 5
    read_timeout        = 5

    # request timeout, seconds
    # optional, default is 5 minutes
    client_timeout      = 300

    # maximum amount of children to fork (concurrent searches to run)
    # optional, default is 0 (unlimited)
    max_children        = 0

    # PID file, searchd process ID file name
    # mandatory
    pid_file        = /home/tenoclock/sphinxsearch/searchd.pid

    # max amount of matches the daemon ever keeps in RAM, per-index
    # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
    # default is 1000 (just like Google)
    max_matches     = 10000

    # seamless rotate, prevents rotate stalls if precaching huge datasets
    # optional, default is 1
    seamless_rotate     = 1

    # whether to forcibly preopen all indexes on startup
    # optional, default is 1 (preopen everything)
    preopen_indexes     = 1

    # whether to unlink .old index copies on succesful rotation.
    # optional, default is 1 (do unlink)
    unlink_old      = 1

    # attribute updates periodic flush timeout, seconds
    # updates will be automatically dumped to disk this frequently
    # optional, default is 0 (disable periodic flush)
    #
    # attr_flush_period = 900


    # instance-wide ondisk_dict defaults (per-index value take precedence)
    # optional, default is 0 (precache all dictionaries in RAM)
    #
    # ondisk_dict_default   = 1


    # MVA updates pool size
    # shared between all instances of searchd, disables attr flushes!
    # optional, default size is 1M
    mva_updates_pool    = 1M

    # max allowed network packet size
    # limits both query packets from clients, and responses from agents
    # optional, default size is 8M
    max_packet_size     = 8M

    # crash log path
    # searchd will (try to) log crashed query to 'crash_log_path.PID' file
    # optional, default is empty (do not create crash logs)
    #
    # crash_log_path        = /var/log/sphinxsearch/crash


    # max allowed per-query filter count
    # optional, default is 256
    max_filters     = 256

    # max allowed per-filter values count
    # optional, default is 4096
    max_filter_values   = 4096


    # socket listen queue length
    # optional, default is 5
    #
    # listen_backlog        = 5


    # per-keyword read buffer size
    # optional, default is 256K
    #
    # read_buffer       = 256K


    # unhinted read size (currently used when reading hits)
    # optional, default is 32K
    #
    # read_unhinted     = 32K


    # max allowed per-batch query count (aka multi-query count)
    # optional, default is 32
    max_batch_queries   = 32


    # max common subtree document cache size, per-query
    # optional, default is 0 (disable subtree optimization)
    #
    # subtree_docs_cache    = 4M


    # max common subtree hit cache size, per-query
    # optional, default is 0 (disable subtree optimization)
    #
    # subtree_hits_cache    = 8M


    # multi-processing mode (MPM)
    # known values are none, fork, prefork, and threads
    # optional, default is fork
    #
    workers         = threads # for RT to work


    # max threads to create for searching local parts of a distributed index
    # optional, default is 0, which means disable multi-threaded searching
    # should work with all MPMs (ie. does NOT require workers=threads)
    #
    # dist_threads      = 4


    # binlog files path; use empty string to disable binlog
    # optional, default is build-time configured data directory
    #
    # binlog_path       = # disable logging
    # binlog_path       = /var/lib/sphinxsearch/data # binlog.001 etc will be created there


    # binlog flush/sync mode
    # 0 means flush and sync every second
    # 1 means flush and sync every transaction
    # 2 means flush every transaction, sync every second
    # optional, default is 2
    #
    # binlog_flush      = 2


    # binlog per-file size limit
    # optional, default is 128M, 0 means no limit
    #
    # binlog_max_log_size   = 256M


    # per-thread stack size, only affects workers=threads mode
    # optional, default is 64K
    #
    # thread_stack          = 128K


    # per-keyword expansion limit (for dict=keywords prefix searches)
    # optional, default is 0 (no limit)
    #
    # expansion_limit       = 1000


    # RT RAM chunks flush period
    # optional, default is 0 (no periodic flush)
    #
    # rt_flush_period       = 900


    # query log file format
    # optional, known values are plain and sphinxql, default is plain
    #
    # query_log_format      = sphinxql


    # version string returned to MySQL network protocol clients
    # optional, default is empty (use Sphinx version)
    #
    # mysql_version_string  = 5.0.37


    # trusted plugin directory
    # optional, default is empty (disable UDFs)
    #
    # plugin_dir            = /usr/local/sphinx/lib


    # default server-wide collation
    # optional, default is libc_ci
    #
    # collation_server      = utf8_general_ci


    # server-wide locale for libc based collations
    # optional, default is C
    #
    # collation_libc_locale = ru_RU.UTF-8


    # threaded server watchdog (only used in workers=threads mode)
    # optional, values are 0 and 1, default is 1 (watchdog on)
    #
    # watchdog              = 1

    
    # SphinxQL compatibility mode (legacy columns and their names)
    # optional, default is 1 (old-style)
    #
    # compat_sphinxql_magics    = 1
}